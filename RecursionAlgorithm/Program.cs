// string[,] table = new string[2, 5];
// // Индксы столбцов и строк наинаются с 0, как и в обычном массиве
// // table [0, 0] -> table [0, 1] -> table [0, 2] - столбцы, 
// // максимальное кол. стобцов меньше на 1 
// // table [0, 0] -> table [1, 0] -> table [2, 0] -> строки, 
// // максимальное кол. строк меньше на 1 

// table[1, 2] = "Слово";
// table[1, 3] = "Имя";
// table[0, 0] = "Слово1";
// table[0, 1] = "Имя1";

// // rows = строки; columns = столбцы

// for (int rows = 0; rows < 2; rows++)
// {
//    for (int columns = 0; columns < 5; columns++)
//    {
//       Console.WriteLine($"{table[rows, columns]}");
//    }
// }



// void PrintArray(int[,] matrix)
// {
//    for (int i = 0; i < 3; i++) // i = matrix.GetLength(0) - количество строк
//    {
//       for (int j = 0; j < 4; j++) // j = matrix.GetLength(1) - количество столбцов
//       {
//          Console.Write(matrix[i, j] + " ");
//       }
//       Console.WriteLine(" ");
//    }
// }

// void FillArray(int[,] matrix)
// {
//    for (int i = 0; i < 3; i++)
//    {
//       for (int j = 0; j < 4; j++)
//       {
//          matrix[i,j]=new Random().Next(1, 10);
//       }
//    }
// }

// int[,] matrix = new int[3, 4];

// PrintArray(matrix);
// FillArray(matrix);
// Console.WriteLine();
// PrintArray(matrix);


// int[,] pic = new int[,]
// {
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0 },
// {0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0 },
// {0, 0, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0 },
// {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },
// };

// void PrintImage(int[,] image)
// {
//    for (int i = 0; i < image.GetLength(0); i++)
//    {
//       for (int j = 0; j < image.GetLength(1); j++)
//       {
//          if (image[i, j] == 0) Console.Write(" ");
//          else Console.Write("*");
//       }
//       Console.WriteLine(" ");
//    }
// }

// void FillImage(int row, int col)
// {
//    if (pic[row, col] == 0)
//    {
//       pic[row, col] = 1;
//       FillImage(row - 1, col);
//       FillImage(row, col - 1);
//       FillImage(row + 1, col);
//       FillImage(row, col + 1);
//    }
// }

// PrintImage(pic);
// FillImage(10, 10);
// PrintImage(pic);

// double Factorial(int n)
// {
//    // 1! = 1
//    // 0! = 1
//    if (n == 1) return 1;
//    else return n* Factorial(n-1);
// }

// for (int i = 1; i < 10; i++)
// {
// Console.WriteLine($"{i}! = {Factorial(i)}");
// }

// f(1) = 1
// f(2) = 1
// f(n) = f(n-1) + f(n-2)

// int Fibonacci(int n)
// {
//    if (n == 1 || n == 2) return 1;
//    else return Fibonacci(n - 1) + Fibonacci(n - 2);
// }

// for (int i = 1; i < 50; i++)
// {
// Console.WriteLine($"F{i} = {Fibonacci(i)}");
// }